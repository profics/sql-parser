#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 333)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,   219,  -125,   146,    70,   102,    91,    65,     7,   230,
    91,     8,   129,   130,   125,   231,   168,   221,    44,   222,
   223,   224,    85,    84,   153,    68,    69,    67,   139,    67,
   188,   150,    18,  -125,  -125,  -125,    44,    71,    67,   224,
    47,    48,    67,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   140,    52,    47,    48,   141,   142,    47,    48,
    67,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    44,    52,   145,    28,    60,   134,    47,    48,     8,    32,
    45,    36,    38,    39,    40,    41,   166,    49,    44,    52,
    95,    28,   167,   138,    94,   169,   170,    14,    92,   171,
   172,   133,    18,    96,   174,    98,    99,   127,   100,   101,
    47,    48,   133,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   178,    28,   179,    60,    47,    48,
     8,    32,    45,    36,    38,    39,    40,    41,    60,    49,
    44,    52,   183,   224,   184,   126,   188,   121,   200,   203,
    67,   133,   206,   207,    18,   113,    67,    60,    44,    18,
   218,   224,    47,    48,   105,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   113,    52,    86,    83,    82,   226,
    47,    48,    81,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,  -144,   146,    80,    79,    47,    48,
    78,    32,    45,    36,    38,    39,    40,    41,    77,    49,
    44,    52,    76,    28,    75,     8,   153,   -81,    64,    63,
   241,   188,   242,   150,    18,   203,    60,   226,    44,    54,
    53,    28,    47,    48,   246,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    12,    52,   248,   188,    67,    18,
    47,    48,   253,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,    11,   146,   255,   256,    47,    48,
   257,    32,    45,    36,    38,    39,    40,    41,     9,    49,
    44,    52,    95,    28,    67,   nil,   153,   nil,   nil,   nil,
   nil,   nil,   nil,   150,    18,    96,   nil,    98,    99,   nil,
   100,   101,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    44,    52,   nil,   146,   nil,   nil,
    47,    48,     8,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,   nil,    28,   nil,   nil,   153,   nil,
   nil,   nil,   nil,   nil,   nil,   150,    18,   nil,   nil,   nil,
    44,   nil,   nil,    28,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,    28,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,   224,
   nil,   nil,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,   224,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,   224,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   224,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,   224,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,   224,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,    28,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,   224,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   224,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,    28,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,    28,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,    28,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,   nil,   nil,   nil,   nil,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,    44,    52,
   nil,   146,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    44,    52,   nil,    28,
   nil,   nil,   nil,   nil,   nil,   115,   nil,   nil,   nil,   150,
    18,   nil,   nil,   nil,    44,   nil,   nil,    28,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,    28,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
   nil,   nil,   nil,   nil,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,    44,    52,   nil,   146,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,    44,    52,   nil,    28,   nil,   nil,
   153,   nil,   nil,   nil,   nil,   nil,   nil,   150,    18,   nil,
   nil,   nil,    44,   nil,   nil,    28,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,    28,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    44,    52,   nil,   146,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,   nil,    52,   nil,   nil,   nil,   nil,   153,   nil,
   nil,   nil,   nil,   nil,   nil,   150,    18,   nil,   nil,   nil,
   nil,   nil,   nil,    95,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    96,    52,    98,    99,
   nil,   100,   101,   212,   213,   189,   190,   nil,   191,   192,
   193,   nil,   nil,   nil,   nil,   194,   195,   196,   197,   198,
   199 ]

racc_action_check = [
   105,   186,    20,   105,    22,    56,   127,    17,     0,   193,
    54,     0,    89,    89,    83,   193,   117,   189,   253,   189,
   189,   253,    49,    49,   105,    21,    21,    56,    97,    17,
   186,   105,   105,    20,    20,    20,   246,    22,   127,   246,
   105,   105,    54,   105,   105,   105,   105,   105,   105,   105,
   253,   105,    99,   105,    83,    83,   100,   101,   253,   253,
   102,   253,   253,   253,   253,   253,   253,   253,   246,   253,
   226,   253,   104,   226,    95,    93,   246,   246,   226,   246,
   246,   246,   246,   246,   246,   246,   115,   246,     8,   246,
    55,     8,   116,    96,    55,   118,   119,     8,    55,   120,
   124,    92,   226,    55,   132,    55,    55,    87,    55,    55,
   226,   226,   134,   226,   226,   226,   226,   226,   226,   226,
     8,   226,   224,   226,   135,   224,   136,   138,     8,     8,
   224,     8,     8,     8,     8,     8,     8,     8,   139,     8,
   223,     8,   144,   223,   145,    84,   147,    81,   150,   151,
    75,   174,   175,   176,   224,    74,    65,    63,   221,   184,
   185,   221,   224,   224,    62,   224,   224,   224,   224,   224,
   224,   224,   223,   224,   187,   224,    52,    46,    45,   191,
   223,   223,    44,   223,   223,   223,   223,   223,   223,   223,
   221,   223,   212,   223,    42,   212,    41,    40,   221,   221,
    39,   221,   221,   221,   221,   221,   221,   221,    38,   221,
   207,   221,    36,   207,    33,   200,   212,    18,    16,    13,
   213,   214,   215,   212,   212,   220,    12,   222,    94,    11,
     9,    94,   212,   212,   225,   212,   212,   212,   212,   212,
   212,   212,   207,   212,     7,   212,   230,   240,   241,   242,
   207,   207,   243,   207,   207,   207,   207,   207,   207,   207,
    94,   207,   203,   207,     5,   203,   247,   249,    94,    94,
   250,    94,    94,    94,    94,    94,    94,    94,     1,    94,
   133,    94,   106,   133,   257,   nil,   203,   nil,   nil,   nil,
   nil,   nil,   nil,   203,   203,   106,   nil,   106,   106,   nil,
   106,   106,   203,   203,   nil,   203,   203,   203,   203,   203,
   203,   203,   133,   203,   146,   203,   nil,   146,   nil,   nil,
   133,   133,   146,   133,   133,   133,   133,   133,   133,   133,
   nil,   133,    80,   133,   nil,    80,   nil,   nil,   146,   nil,
   nil,   nil,   nil,   nil,   nil,   146,   146,   nil,   nil,   nil,
    23,   nil,   nil,    23,   146,   146,   nil,   146,   146,   146,
   146,   146,   146,   146,    80,   146,   nil,   146,    28,   nil,
   nil,    28,    80,    80,   nil,    80,    80,    80,    80,    80,
    80,    80,    23,    80,   nil,    80,   199,   nil,   nil,   199,
   nil,   nil,   nil,    23,    23,    23,    23,    23,    23,    23,
    28,    23,   nil,    23,   198,   nil,   nil,   198,    28,    28,
   nil,    28,    28,    28,    28,    28,    28,    28,   199,    28,
   nil,    28,   197,   nil,   nil,   197,   199,   199,   nil,   199,
   199,   199,   199,   199,   199,   199,   198,   199,   nil,   199,
   196,   nil,   nil,   196,   198,   198,   nil,   198,   198,   198,
   198,   198,   198,   198,   197,   198,   nil,   198,   195,   nil,
   nil,   195,   197,   197,   nil,   197,   197,   197,   197,   197,
   197,   197,   196,   197,   nil,   197,   194,   nil,   nil,   194,
   196,   196,   nil,   196,   196,   196,   196,   196,   196,   196,
   195,   196,   nil,   196,    79,   nil,   nil,    79,   195,   195,
   nil,   195,   195,   195,   195,   195,   195,   195,   194,   195,
   nil,   195,   192,   nil,   nil,   192,   194,   194,   nil,   194,
   194,   194,   194,   194,   194,   194,    79,   194,   nil,   194,
   190,   nil,   nil,   190,    79,    79,   nil,    79,    79,    79,
    79,    79,    79,    79,   192,    79,   nil,    79,    78,   nil,
   nil,    78,   192,   192,   nil,   192,   192,   192,   192,   192,
   192,   192,   190,   192,   nil,   192,    77,   nil,   nil,    77,
   190,   190,   nil,   190,   190,   190,   190,   190,   190,   190,
    78,   190,   nil,   190,    69,   nil,   nil,    69,    78,    78,
   nil,    78,    78,    78,    78,    78,    78,    78,    77,    78,
   nil,    78,   nil,   nil,   nil,   nil,    77,    77,   nil,    77,
    77,    77,    77,    77,    77,    77,    69,    77,   153,    77,
   nil,   153,   nil,   nil,    69,    69,   nil,    69,    69,    69,
    69,    69,    69,    69,   nil,    69,    76,    69,   nil,    76,
   nil,   nil,   nil,   nil,   nil,    76,   nil,   nil,   nil,   153,
   153,   nil,   nil,   nil,   179,   nil,   nil,   179,   153,   153,
   nil,   153,   153,   153,   153,   153,   153,   153,    76,   153,
   nil,   153,    71,   nil,   nil,    71,    76,    76,   nil,    76,
    76,    76,    76,    76,    76,    76,   179,    76,   nil,    76,
   nil,   nil,   nil,   nil,   179,   179,   nil,   179,   179,   179,
   179,   179,   179,   179,    71,   179,   183,   179,   nil,   183,
   nil,   nil,    71,    71,   nil,    71,    71,    71,    71,    71,
    71,    71,   nil,    71,    64,    71,   nil,    64,   nil,   nil,
   183,   nil,   nil,   nil,   nil,   nil,   nil,   183,   183,   nil,
   nil,   nil,    70,   nil,   nil,    70,   183,   183,   nil,   183,
   183,   183,   183,   183,   183,   183,    64,   183,   nil,   183,
    68,   nil,   nil,    68,    64,    64,   nil,    64,    64,    64,
    64,    64,    64,    64,    70,    64,   nil,    64,   nil,   nil,
   nil,   nil,    70,    70,   nil,    70,    70,    70,    70,    70,
    70,    70,    68,    70,   188,    70,   nil,   188,   nil,   nil,
    68,    68,   nil,    68,    68,    68,    68,    68,    68,    68,
   nil,    68,   nil,    68,   nil,   nil,   nil,   nil,   188,   nil,
   nil,   nil,   nil,   nil,   nil,   188,   188,   nil,   nil,   nil,
   nil,   nil,   nil,   181,   188,   188,   nil,   188,   188,   188,
   188,   188,   188,   188,   nil,   188,   181,   188,   181,   181,
   nil,   181,   181,   181,   181,   149,   149,   nil,   149,   149,
   149,   nil,   nil,   nil,   nil,   149,   149,   149,   149,   149,
   149 ]

racc_action_pointer = [
    -2,   278,   nil,   nil,   nil,   262,   nil,   233,    83,   230,
   nil,   226,   189,   203,   nil,   nil,   214,    -8,   168,   nil,
   -12,   -20,   -10,   345,   nil,   nil,   nil,   nil,   363,   nil,
   nil,   nil,   nil,   165,   nil,   nil,   204,   nil,   200,   192,
   189,   188,   139,   nil,   133,   173,   122,   nil,   nil,   -34,
   nil,   nil,   117,   nil,     5,    86,   -10,   nil,   nil,   nil,
   nil,   nil,   138,   120,   719,   119,   nil,   nil,   755,   579,
   737,   667,   nil,   nil,   146,   113,   631,   561,   543,   489,
   327,   142,   nil,     9,    89,   nil,   nil,   103,   nil,     6,
   nil,   nil,    93,    63,   223,    37,    75,    10,   nil,    31,
    35,    36,    23,   nil,    45,    -5,   278,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    77,    83,     7,    86,    87,
    90,   nil,   nil,   nil,    95,   nil,   nil,     1,   nil,   nil,
   nil,   nil,   100,   275,   104,   115,   122,   nil,    90,   101,
   nil,   nil,   nil,   nil,   114,   141,   309,   108,   nil,   826,
   140,   118,   nil,   613,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   143,   143,   149,   nil,   nil,   649,
   nil,   829,   nil,   701,   122,   151,    -8,   165,   789,   -13,
   525,   171,   507,   -20,   471,   453,   435,   417,   399,   381,
   202,   nil,   nil,   257,   nil,   nil,   nil,   205,   nil,   nil,
   nil,   nil,   187,   212,   183,   218,   nil,   nil,   nil,   nil,
   194,   153,   219,   135,   117,   203,    65,   nil,   nil,   nil,
   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   209,   211,   212,   221,   nil,   nil,    31,   257,   nil,   258,
   266,   nil,   nil,    13,   nil,   nil,   nil,   247,   nil,   nil ]

racc_action_default = [
  -156,  -156,    -1,    -2,    -3,    -5,   -16,  -156,  -156,  -156,
    -4,  -156,  -156,   -26,   -27,   -28,   -30,   -33,  -150,  -108,
  -109,  -112,  -115,  -156,  -117,  -118,  -119,  -120,  -156,  -122,
  -123,  -124,  -126,  -156,  -128,  -129,  -156,  -131,  -156,  -156,
  -156,  -156,  -137,  -138,  -142,  -156,  -156,  -148,  -149,  -156,
  -153,  -154,  -156,   260,  -156,  -156,   -38,   -39,   -41,   -42,
   -81,   -25,   -58,  -156,  -156,  -156,   -32,  -150,  -156,  -156,
  -156,  -156,  -116,  -125,  -156,  -156,  -156,  -156,  -156,  -156,
  -156,  -140,  -141,  -156,  -156,  -152,  -155,    -6,    -8,   -12,
   -10,   -11,  -156,  -156,  -156,  -156,  -156,  -156,   -46,   -48,
   -50,   -51,  -156,   -37,   -60,  -156,   -35,   -29,   -31,  -110,
  -111,  -113,  -114,  -121,  -127,  -156,  -156,  -156,  -156,  -156,
  -156,  -139,  -143,  -145,  -156,  -147,  -151,  -156,    -9,   -13,
   -14,   -17,   -23,  -156,  -156,  -156,   -21,   -43,  -156,  -156,
   -47,   -49,   -52,   -36,   -65,  -156,  -156,   -59,   -67,  -156,
  -156,   -84,   -86,  -156,   -89,   -90,   -91,   -93,   -94,   -95,
   -96,   -97,   -98,  -105,  -106,  -107,  -130,  -132,  -133,  -134,
  -135,  -136,  -146,    -7,  -156,  -156,   -75,   -18,   -19,  -156,
   -44,  -156,   -34,  -156,  -156,  -156,  -156,  -107,  -156,  -156,
  -156,  -156,  -156,  -156,  -156,  -156,  -156,  -156,  -156,  -156,
  -156,   -40,   -80,  -156,   -88,   -22,   -24,  -156,   -20,   -45,
   -53,   -54,  -156,  -156,   -66,   -61,   -63,   -64,   -15,   -92,
   -85,  -156,  -156,  -156,  -156,  -156,  -156,   -71,   -72,   -77,
  -156,   -79,   -99,  -100,  -101,  -102,  -103,  -104,   -87,   -74,
   -55,  -156,  -156,  -156,   -70,   -76,  -156,  -156,   -78,  -156,
   -57,   -83,   -62,  -156,   -69,   -73,   -56,  -156,   -68,   -82 ]

racc_goto_table = [
    66,    17,    55,   175,   147,    56,   135,   131,    88,   227,
   182,   201,   111,   112,   109,   110,   217,   216,    13,    62,
    15,    74,   104,   144,    61,    93,   202,   209,   210,   211,
   128,   249,   250,   215,     1,    87,    10,    90,     5,   103,
   244,   220,   238,   204,     4,   186,     3,     2,   108,   177,
   124,    72,   201,   106,    73,   122,    56,    17,   114,   225,
   123,   229,   nil,   232,   233,   234,   235,   236,   237,   116,
   117,   118,   119,   120,   217,   252,   107,   239,   nil,   nil,
   nil,   173,   214,   201,   nil,   143,   nil,   136,   137,   205,
   243,   208,   245,   nil,   nil,   nil,   247,   nil,   nil,    73,
    73,    73,    73,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    90,   240,   nil,   nil,   nil,   254,   nil,   nil,   nil,   nil,
   nil,   nil,   258,   nil,   nil,   nil,   176,   nil,   nil,   181,
   nil,   180,    56,   nil,   nil,   nil,   nil,   nil,   nil,   187,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   136,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   176,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    74,   nil,   176,
   nil,   nil,   nil,   nil,   251,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   259 ]

racc_goto_check = [
    11,    18,    14,    20,    38,    29,    17,    15,     8,    48,
    28,    12,    61,    61,    59,    59,    43,    42,    21,    25,
    23,    18,    26,    27,    22,    16,    31,    35,    36,    37,
    10,    39,    40,    41,     1,     7,     6,    11,     5,    11,
    48,    52,    53,    54,     4,    38,     3,     2,    11,    15,
    63,    64,    12,    14,    60,    75,    29,    18,    11,    46,
    76,    46,   nil,    46,    46,    46,    46,    46,    46,    18,
    18,    18,    18,    18,    43,    42,    23,    20,   nil,   nil,
   nil,     8,    38,    12,   nil,    11,   nil,    18,    29,    15,
    46,    17,    46,   nil,   nil,   nil,    20,   nil,   nil,    60,
    60,    60,    60,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    11,    38,   nil,   nil,   nil,    46,   nil,   nil,   nil,   nil,
   nil,   nil,    46,   nil,   nil,   nil,    18,   nil,   nil,    14,
   nil,    29,    29,   nil,   nil,   nil,   nil,   nil,   nil,    18,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    18,   nil,    18,
   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    11 ]

racc_goto_pointer = [
   nil,    34,    47,    46,    44,    38,    31,   -19,   -46,   nil,
   -59,   -17,  -139,   nil,   -10,   -85,   -30,   -88,    -7,   nil,
  -130,    10,    11,    12,   nil,     6,   -40,   -81,  -134,    -7,
   nil,  -124,   nil,   nil,   nil,  -154,  -153,  -152,  -101,  -210,
  -209,  -151,  -167,  -168,   nil,   nil,  -131,   nil,  -182,   nil,
   nil,   nil,  -147,  -161,  -110,   nil,   nil,   nil,   nil,   -54,
    31,   -58,   nil,   -33,    28,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -28,   -23,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   185,   nil,   nil,   nil,    89,
   nil,    34,   148,     6,   nil,   nil,   nil,   nil,   165,   132,
   nil,   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    35,
    57,   228,    58,    59,    97,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    26,   164,   158,   149,   159,   nil,   160,
   161,   162,   151,   152,   154,   155,   156,   157,   163,    19,
    20,    21,    22,    23,    24,    25,    27,    29,    30,    31,
    33,    37,    42,    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  1, 62, :_reduce_none,
  2, 63, :_reduce_4,
  0, 66, :_reduce_none,
  3, 66, :_reduce_6,
  3, 67, :_reduce_7,
  1, 67, :_reduce_none,
  2, 68, :_reduce_9,
  1, 69, :_reduce_none,
  1, 69, :_reduce_11,
  0, 70, :_reduce_12,
  1, 70, :_reduce_13,
  1, 70, :_reduce_14,
  3, 72, :_reduce_15,
  1, 65, :_reduce_none,
  5, 64, :_reduce_17,
  6, 64, :_reduce_18,
  3, 76, :_reduce_19,
  3, 77, :_reduce_20,
  1, 77, :_reduce_none,
  3, 75, :_reduce_22,
  1, 75, :_reduce_23,
  3, 79, :_reduce_24,
  3, 73, :_reduce_25,
  2, 73, :_reduce_26,
  1, 81, :_reduce_27,
  1, 81, :_reduce_28,
  3, 83, :_reduce_29,
  1, 83, :_reduce_none,
  3, 84, :_reduce_31,
  2, 84, :_reduce_32,
  1, 84, :_reduce_none,
  4, 82, :_reduce_34,
  2, 85, :_reduce_35,
  3, 74, :_reduce_36,
  2, 74, :_reduce_37,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 91, :_reduce_none,
  1, 90, :_reduce_none,
  1, 90, :_reduce_none,
  3, 92, :_reduce_43,
  4, 92, :_reduce_44,
  5, 93, :_reduce_45,
  1, 94, :_reduce_46,
  2, 94, :_reduce_47,
  1, 94, :_reduce_48,
  2, 94, :_reduce_49,
  1, 94, :_reduce_50,
  1, 94, :_reduce_51,
  2, 94, :_reduce_52,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  2, 96, :_reduce_55,
  4, 97, :_reduce_56,
  1, 99, :_reduce_none,
  0, 86, :_reduce_none,
  2, 86, :_reduce_59,
  0, 87, :_reduce_none,
  3, 87, :_reduce_61,
  3, 101, :_reduce_62,
  1, 101, :_reduce_none,
  1, 102, :_reduce_none,
  0, 88, :_reduce_none,
  2, 88, :_reduce_66,
  1, 104, :_reduce_none,
  6, 105, :_reduce_68,
  5, 105, :_reduce_69,
  4, 107, :_reduce_70,
  3, 107, :_reduce_71,
  1, 108, :_reduce_none,
  3, 108, :_reduce_73,
  3, 80, :_reduce_74,
  1, 80, :_reduce_none,
  4, 109, :_reduce_76,
  3, 109, :_reduce_77,
  4, 110, :_reduce_78,
  3, 110, :_reduce_79,
  2, 111, :_reduce_80,
  1, 89, :_reduce_81,
  3, 100, :_reduce_82,
  1, 100, :_reduce_none,
  1, 98, :_reduce_none,
  3, 98, :_reduce_85,
  1, 112, :_reduce_none,
  3, 112, :_reduce_87,
  2, 113, :_reduce_88,
  1, 113, :_reduce_none,
  1, 114, :_reduce_none,
  1, 115, :_reduce_none,
  3, 115, :_reduce_92,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  3, 117, :_reduce_99,
  3, 117, :_reduce_100,
  3, 117, :_reduce_101,
  3, 117, :_reduce_102,
  3, 117, :_reduce_103,
  3, 117, :_reduce_104,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 118, :_reduce_none,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  3, 119, :_reduce_110,
  3, 119, :_reduce_111,
  1, 119, :_reduce_none,
  3, 121, :_reduce_113,
  3, 121, :_reduce_114,
  1, 121, :_reduce_none,
  2, 122, :_reduce_116,
  1, 122, :_reduce_none,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  1, 124, :_reduce_none,
  3, 124, :_reduce_121,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  1, 127, :_reduce_none,
  1, 127, :_reduce_none,
  1, 128, :_reduce_126,
  3, 103, :_reduce_127,
  1, 103, :_reduce_none,
  1, 130, :_reduce_none,
  4, 126, :_reduce_130,
  1, 126, :_reduce_none,
  4, 131, :_reduce_132,
  4, 131, :_reduce_133,
  4, 131, :_reduce_134,
  4, 131, :_reduce_135,
  4, 131, :_reduce_136,
  1, 129, :_reduce_none,
  1, 129, :_reduce_none,
  3, 132, :_reduce_139,
  2, 132, :_reduce_140,
  2, 132, :_reduce_141,
  1, 132, :_reduce_142,
  3, 133, :_reduce_143,
  1, 134, :_reduce_none,
  1, 135, :_reduce_none,
  2, 136, :_reduce_146,
  1, 136, :_reduce_147,
  1, 123, :_reduce_148,
  1, 123, :_reduce_149,
  1, 71, :_reduce_150,
  3, 120, :_reduce_151,
  2, 120, :_reduce_152,
  1, 120, :_reduce_none,
  1, 137, :_reduce_none,
  2, 138, :_reduce_155 ]

racc_reduce_n = 156

racc_shift_n = 260

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :VALUES => 12,
  :SELECT => 13,
  :asterisk => 14,
  :AS => 15,
  :FROM => 16,
  :CROSS => 17,
  :JOIN => 18,
  :INNER => 19,
  :LEFT => 20,
  :OUTER => 21,
  :RIGHT => 22,
  :FULL => 23,
  :ON => 24,
  :USING => 25,
  :WHERE => 26,
  :GROUP => 27,
  :HAVING => 28,
  :NOT => 29,
  :BETWEEN => 30,
  :AND => 31,
  :IN => 32,
  :LIKE => 33,
  :IS => 34,
  :NULL => 35,
  :EXISTS => 36,
  :identifier => 37,
  :OR => 38,
  :equals_operator => 39,
  :not_equals_operator => 40,
  :less_than_operator => 41,
  :greater_than_operator => 42,
  :less_than_or_equals_operator => 43,
  :greater_than_or_equals_operator => 44,
  :plus_sign => 45,
  :minus_sign => 46,
  :solidus => 47,
  :CURRENT_USER => 48,
  :period => 49,
  :COUNT => 50,
  :AVG => 51,
  :MAX => 52,
  :MIN => 53,
  :SUM => 54,
  :E => 55,
  :quote => 56,
  :character_string_literal => 57,
  :DATE => 58,
  :date_string => 59 }

racc_nt_base = 60

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "table_reference",
  "value_list_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "value_list",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'parser.racc', 13)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 5 omitted

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 21)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 25)
  def _reduce_9(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 10 omitted

module_eval(<<'.,.,', 'parser.racc', 29)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 49)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_23(val, _values, result)
     result = Array(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_45(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 67 omitted

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 152)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_74(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 175)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_82(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

module_eval(<<'.,.,', 'parser.racc', 191)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 195)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_92(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 219)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 222)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 236)
  def _reduce_110(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_111(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 246)
  def _reduce_116(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_121(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 128 omitted

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 281)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 137 omitted

# reduce 138 omitted

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 293)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 296)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 144 omitted

# reduce 145 omitted

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_146(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 309)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 310)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 318)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 319)
  def _reduce_152(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 153 omitted

# reduce 154 omitted

module_eval(<<'.,.,', 'parser.racc', 326)
  def _reduce_155(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
